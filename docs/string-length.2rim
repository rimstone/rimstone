.TH RIM 2rim $VERSION $DATE Development Tools
.SH NAME
string-length \-  (strings)
.SH PURPOSE
Get string length.

.SH SYNTAX

.RS 4
.EX

string-length <string> to <length>

.EE
.RE

.SH DESCRIPTION
string-length will place the number of bytes in <string> into number <length>.

Note that <string> does not need to be null-terminated, meaning it can be a binary or text string. <length> is the number of bytes comprising any such string. 

Note that length of the string is not calculated; rather it is kept in a pre-fetched, cached location right next to the data itself for fast retrieval.

.LP
.B STRING LENGTH AS A FUNCTION
.LP

You can also use "strlen()" function to obtain string length as a number. You can use it in number or double expressions. The following two are equivalent:

.RS 4
.EX

set-string s = "string"
string-length s to len
print-out "Half of length is ", len/2 new-line

.EE
.RE

and

.RS 4
.EX

set-string s = "string"
print-out "Half of length is ", strlen(s)/2 new-line

.EE
.RE

which would yield "3".

An example in expression:

.RS 4
.EX

set-string s = "other string"
set-number n = strlen("some string") + strlen (s) -1

.EE
.RE

The result for "n" would be 22.

.SH EXAMPLES
Variable "len" will be 6:

.RS 4
.EX

set-string str = "string"
string-length str to len

.EE
.RE

Variable "len2" will be 18 - the string has a null character in the middle of it:

.RS 4
.EX

set-string str2 = "string" "\\x00 after null"
string-length str2 to len2

.EE
.RE

.SH SEE ALSO
 Strings

\fBcopy-string\fP  
\fBcount-substring\fP  
\fBdelete-string\fP  
\fBdouble-string\fP  
\fBlower-string\fP  
\fBmatch-regex\fP  
\fBnew-string\fP  
\fBnumber-string\fP  
\fBread-split\fP  
\fBreplace-string\fP  
\fBscan-string\fP  
\fBset-string\fP  
\fBsplit-string\fP  
\fBstring-double\fP  
\fBstring-expressions\fP  
\fBstring-length\fP  
\fBstring-number\fP  
\fBtrim-string\fP  
\fBupper-string\fP  
\fBwrite-string\fP   
See all 
\fBdocumentation\fP
