.TH RIM 2rim $VERSION $DATE Development Tools
.SH NAME
error-code \- RimStone documentation (error-handling)
.SH DESCRIPTION
Many RimStone statements return status with RIM_ERR_... error codes, which are generally descriptive to a point. Such status may not as detailed as the operating system "errno" variable, however you can use "errno" clause in \fBget-req\fP statement to obtain the last known errno value from aforementioned statements. You should obtain this value as soon as possible after the statement because another statement may set it afterwards.

In the following example, a directory is attempted to be deleted via \fBdelete-file\fP, which will fail with RIM_ERR_DELETE - however you can get a more specific code via "errno" (which in this case is "21", or "EISDIR", which means that it cannot delete a directory with this statement):

.RS 4
.EX

delete-file "some_directory" status stc
if-true stc equal RIM_ERR_DELETE
    get-req errno to e
    @Cannot delete file
    print-format "Error %ld\\n", e
end-if

.EE
.RE

Note that with some RIM_ERR_... codes, the "errno" clause in get-req may return 0. This means the error was detected by RimStone and not reported by the operating system.

You can use standard Linux constants, as defined in C "errno.h" include file to compare the error code obtained with get-req. For instance, you can use constants like EACCES or EEXIST. To see what's the meaning of errno number or name, use standard Linux utility "errno".
.SH SEE ALSO
 Error handling

\fBdb-error\fP  
\fBerror-code\fP  
\fBerror-handling\fP  
\fBreport-error\fP   
See all 
\fBdocumentation\fP
